From 96783a84595feb6ed685ea240888ab631ae94fea Mon Sep 17 00:00:00 2001
From: Peridot <peridot491@protonmail.com>
Date: Sun, 8 May 2022 22:57:38 +0200
Subject: [PATCH] Changes


diff --git a/src/main/java/net/minecraft/server/ChunkProviderGenerate.java b/src/main/java/net/minecraft/server/ChunkProviderGenerate.java
index 38a4f141..2aeb2fc7 100644
--- a/src/main/java/net/minecraft/server/ChunkProviderGenerate.java
+++ b/src/main/java/net/minecraft/server/ChunkProviderGenerate.java
@@ -211,19 +211,21 @@ public class ChunkProviderGenerate implements IChunkProvider {
         ChunkSnapshot chunksnapshot = new ChunkSnapshot();
 
         this.a(i, j, chunksnapshot);
+
         synchronized (this) {
             this.getChunkData().B = this.m.getWorldChunkManager().getBiomeBlock(this.getChunkData().B, i * 16, j * 16, 16, 16);
+            this.a(i, j, chunksnapshot, this.getChunkData().B);
         }
-        this.a(i, j, chunksnapshot, this.getChunkData().B);
 
-        synchronized (this) { // Titanium synchronize structure generation
-            if (this.r.r && this.m.paperConfigTitanium.generatorSettings.caves) { // PaperSpigot
-                this.u.a(this, this.m, i, j, chunksnapshot);
-            }
+        if (this.r.r && this.m.paperConfigTitanium.generatorSettings.caves) { // PaperSpigot
+            this.u.a(this, this.m, i, j, chunksnapshot);
+        }
 
-            if (this.r.z && this.m.paperConfigTitanium.generatorSettings.canyon) { // PaperSpigot
-                this.z.a(this, this.m, i, j, chunksnapshot);
-            }
+        if (this.r.z && this.m.paperConfigTitanium.generatorSettings.canyon) { // PaperSpigot
+            this.z.a(this, this.m, i, j, chunksnapshot);
+        }
+
+        synchronized (this) { // Titanium synchronize structure generation
 
             if (this.r.w && this.n && this.m.paperConfigTitanium.generatorSettings.mineshaft) { // PaperSpigot
                 this.x.a(this, this.m, i, j, chunksnapshot);
@@ -259,16 +261,16 @@ public class ChunkProviderGenerate implements IChunkProvider {
     }
 
     private void a(int i, int j, int k) {
-        this.getChunkData().g = this.getChunkData().b.a(this.getChunkData().g, i, k, 5, 5, (double) this.r.e, (double) this.r.f, (double) this.r.g);
+        synchronized (this) {
+            this.getChunkData().g = this.getChunkData().b.a(this.getChunkData().g, i, k, 5, 5, (double) this.r.e, (double) this.r.f, (double) this.r.g);
 
-        float f = this.r.a;
-        float f1 = this.r.b;
+            float f = this.r.a;
+            float f1 = this.r.b;
 
-        synchronized (this) {
             this.getChunkData().d = this.getChunkData().k.a(this.getChunkData().d, i, j, k, 5, 33, 5, (double) (f / this.r.h), (double) (f1 / this.r.i), (double) (f / this.r.j));
             this.getChunkData().e = this.getChunkData().i.a(this.getChunkData().e, i, j, k, 5, 33, 5, (double) f, (double) f1, (double) f);
+            this.getChunkData().f = this.getChunkData().j.a(this.getChunkData().f, i, j, k, 5, 33, 5, (double) f, (double) f1, (double) f);
         }
-        this.getChunkData().f = this.getChunkData().j.a(this.getChunkData().f, i, j, k, 5, 33, 5, (double) f, (double) f1, (double) f);
 
         boolean flag = false;
         boolean flag1 = false;
-- 
2.36.0.windows.1

